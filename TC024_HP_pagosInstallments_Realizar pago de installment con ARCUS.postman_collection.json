{
	"info": {
		"_postman_id": "e733c288-1b39-4603-bdaf-c9f55d687e47",
		"name": "TC024_HP_pagosInstallments_Realizar pago de installment con ARCUS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26276651"
	},
	"item": [
		{
			"name": "POST_Login CUSTOMER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    var response = JSON.parse(responseBody);\r",
							"    pm.globals.set(\"Authorization-CUSTOMER\", response.Authorization);\r",
							"\r",
							"    pm.test(\"Token was successfully generated\", function() {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.Authorization).is.not.undefined\r",
							"    });\r",
							"\r",
							"    // Generar un número aleatorio de 10 dígitos\r",
							"    let randomInt = Math.floor(Math.random() * 9000000000) + 1000000000; // Garantiza 10 dígitos\r",
							"    pm.globals.set(\"idArcus\", randomInt); // Guarda el número como una variable global\r",
							"\r",
							"    console.log(\"Número aleatorio de 10 dígitos generado:\", randomInt); // Opcional: Log para depuración\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set(\"phone\", \"529311931193\");",
							"pm.globals.set(\"env\", \"net\");",
							"//pm.globals.set(\"amount\", \"3500\");",
							"//pm.globals.set(\"loanId\", \"39826\");",
							"//pm.globals.set(\"transactionId\", \"107684\");",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-session-id-kount",
						"value": "{{$randomUUID}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"login\":\"{{phone}}\",\"password\":\"123456\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://customer-registration.aplazo.{{env}}/login",
					"protocol": "https",
					"host": [
						"customer-registration",
						"aplazo",
						"{{env}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_Get CUSTOMER information",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código de estado debe ser \"+pm.response.code, function () {",
							"    pm.response.to.have.status(200);",
							"",
							"    var response = JSON.parse(responseBody);",
							"    pm.globals.set(\"customerId\", response.customerId);",
							"    pm.globals.set(\"customerName\", response.name);",
							"    //pm.globals.set(\"lastName\", response.lastName);",
							"    //pm.globals.set(\"secondLastName\", response.secondLastName);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br",
						"type": "text"
					},
					{
						"key": "Accept-Language",
						"value": "es-ES,es;q=0.9",
						"type": "text"
					},
					{
						"key": "Connection",
						"value": "keep-alive",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{Authorization-CUSTOMER}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{customer-info}}.{{env}}/api/inquiry/v1/home",
					"host": [
						"{{customer-info}}",
						"{{env}}"
					],
					"path": [
						"api",
						"inquiry",
						"v1",
						"home"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_Get a list of loans with status OUTSTANDING, LATE, or DEFAULTED",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = JSON.parse(responseBody);",
							"",
							"for (let i = 0; i < response.content.length; i++) {",
							"    if (response.content[i].status == 'OUTSTANDING') {",
							"        pm.globals.set(\"loan\", response.content[i].id);",
							"        pm.globals.set(\"installments\", response.content[i].installments)",
							"        pm.globals.set(\"statusLoan\", response.content[i].status)",
							"        break; ",
							"    } else if (response.content[i].status == 'HISTORICAL'){",
							"        console.log(\"Estatus de loan no es OUTSTANDING\");",
							"        pm.globals.set(\"loan\", response.content[i].id);",
							"        pm.globals.set(\"statusLoan\", response.content[i].status)",
							"    }",
							"}",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Authorization-CUSTOMER}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://customer-mono.aplazo.{{env}}/api/v1/customer/loan-history?page=0&size=10&status=OUTSTANDING&status=LATE",
					"protocol": "https",
					"host": [
						"customer-mono",
						"aplazo",
						"{{env}}"
					],
					"path": [
						"api",
						"v1",
						"customer",
						"loan-history"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "status",
							"value": "OUTSTANDING"
						},
						{
							"key": "status",
							"value": "LATE"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_Get loan information",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = JSON.parse(responseBody);",
							"",
							"",
							"if (pm.globals.get(\"statusLoan\") == 'OUTSTANDING' || pm.globals.get(\"statusLoan\") == 'LATE' ) {",
							"    for (let i = 0; i < response.transactions.length; i++) {",
							"        if (response.transactions[i].status == 'NEXT') {",
							"            pm.globals.set(\"transactionId\", response.transactions[i].id);",
							"            pm.globals.set(\"statusInstallment\", response.transactions[i].status);",
							"            pm.globals.set(\"amount\", Math.round(response.transactions[i].amount*100));",
							"            break; ",
							"        }",
							"    }",
							"}",
							"",
							"if (pm.globals.get(\"statusLoan\") == 'HISTORICAL' ) {",
							"    console.log(\"Es loan esta en status diferente a OUTSTANDING\")",
							"}",
							"",
							"if ([201, 200].includes(pm.response.code)) {",
							"  pm.test(\"Status code is \"+pm.response.code)",
							"} else if (!pm.expect(pm.response.code).to.be.oneOf([500, 504, 409, 404, 423, 400])) {",
							"  const $ = cheerio.load(pm.response.text());",
							"  // console.log(\"error html\");",
							"  pm.test(\"html error message\", () => {",
							"    console.log($(\"body\").text());",
							"    pm.expect.fail(\"Failed\");",
							"  });",
							"} else {",
							"  console.log(\"error\");",
							"  pm.test(\"error message\", () => {",
							"    jsonData = pm.response.json();",
							"    console.log(\"Response value is:\" + jsonData.error);",
							"    console.log(\"Response value is:\" + jsonData.httpStatus);",
							"    pm.expect.fail(\"Status code is \"+pm.response.code+\" \" +jsonData.error);",
							"  });",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Authorization-CUSTOMER}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://api.aplazo.{{env}}/customer/loan/{{loan}}",
					"protocol": "https",
					"host": [
						"api",
						"aplazo",
						"{{env}}"
					],
					"path": [
						"customer",
						"loan",
						"{{loan}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_Get walmart reference",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    ",
							"    var response = JSON.parse(responseBody);",
							"    pm.globals.set(\"referenciaWalmart\", response.reference);",
							"    let referencia = pm.globals.get(\"referenciaWalmart\");",
							"",
							"    pm.globals.set(\"transactionAmount\", response.transactionAmount);",
							"",
							"    var amountArcus = pm.globals.get(\"transactionAmount\");",
							"    var newAmountArcus = amountArcus*100;",
							"    pm.globals.set(\"newAmountArcus\", newAmountArcus);",
							"    console.log(newAmountArcus);",
							"",
							"    pm.test(\"Es Whole Payment\", function () {",
							"        var jsonData = pm.response.json();",
							"        pm.expect(jsonData.isWholePayment).to.be.false;",
							"    });",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{Authorization-CUSTOMER}}"
					},
					{
						"key": "Idempotency-Key",
						"value": "{{$guid}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://arcus-ms.aplazo.{{env}}/api/v1/reference/walmart?loanId={{loan}}&transactionId={{transactionId}}",
					"protocol": "https",
					"host": [
						"arcus-ms",
						"aplazo",
						"{{env}}"
					],
					"path": [
						"api",
						"v1",
						"reference",
						"walmart"
					],
					"query": [
						{
							"key": "loanId",
							"value": "{{loan}}"
						},
						{
							"key": "transactionId",
							"value": "{{transactionId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST_Login ARCUS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"",
							"    var response = JSON.parse(responseBody);",
							"    pm.globals.set(\"access_token-login-arcus\", response.token);",
							"",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"user\": \"arcus\",\n    \"password\": \"Arcu$@uth\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://arcus-ms.aplazo.{{env}}/api/v2/authentication",
					"protocol": "https",
					"host": [
						"arcus-ms",
						"aplazo",
						"{{env}}"
					],
					"path": [
						"api",
						"v2",
						"authentication"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST_Make a Whole payment",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Obtén el valor actual de la variable \"loan\"",
							"let idLoan = pm.globals.get(\"loan\");",
							"",
							"// Convierte el valor a una cadena para obtener su longitud",
							"let loan = idLoan.toString();",
							"",
							"// Verifica si la longitud es menor que 9",
							"if (loan.length < 9) {",
							"  // Calcula cuántos ceros se deben agregar al principio para tener 9 cifras",
							"  const cerosFaltantes = 9 - loan.length;",
							"  // Agrega los ceros al principio del valor actual de \"id\"",
							"  loan = \"0\".repeat(cerosFaltantes) + loan;",
							"}",
							"",
							"// Actualiza el valor de la variable \"id\" en el entorno con el nuevo valor de 9 cifras",
							"pm.globals.set(\"idLoan\", loan);",
							"console.log(loan);",
							"",
							"// Obtén el valor actual de la variable \"transactionId\"",
							"let idTransaction = pm.globals.get(\"transactionId\");",
							"let transaction = idTransaction.toString();",
							"",
							"if (transaction.length < 9) {",
							"  const cerosFaltantes = 9 - transaction.length;",
							"  transaction = \"0\".repeat(cerosFaltantes) + transaction;",
							"}",
							"",
							"pm.globals.set(\"idTransaction\", transaction);",
							"console.log(transaction);",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Idempotency-Key",
						"value": "{{$guid}}",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{access_token-login-arcus}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": \"ap_{{idArcus}}\",\n  \"object\": \"arcuspay\",\n  \"type\": \"bill_pay\",\n  \"account_reference\": \"{{referenciaWalmart}}\", \n  \"country\": \"MX\",\n  \"amount\": \"{{newAmountArcus}}\",\n  \"currency\": \"MXN\",\n  \"payer_id\": \"23312\",\n  \"metadata\": {\n    \"pos_id\": \"23442\",\n    \"cashier_id\": \"xx@3444df_id_33\"\n  }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://arcus-ms.aplazo.{{env}}/api/v2/arcuspay",
					"protocol": "https",
					"host": [
						"arcus-ms",
						"aplazo",
						"{{env}}"
					],
					"path": [
						"api",
						"v2",
						"arcuspay"
					]
				}
			},
			"response": []
		}
	]
}