{
	"info": {
		"_postman_id": "6fe69e3a-e146-45b0-9ecb-c6625b902245",
		"name": "TC027_HP_pagoInstallment_Realizar pago de installment con SPEI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26276651"
	},
	"item": [
		{
			"name": "POST_Login CUSTOMER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    var response = JSON.parse(responseBody);\r",
							"    pm.globals.set(\"Authorization-customer\", response.Authorization);\r",
							"\r",
							"    pm.test(\"Token was successfully generated\", function() {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.Authorization).is.not.undefined\r",
							"    });\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"/* ENDPOINTS */",
							"pm.globals.set(\"api.aplazo\", \"https://api.aplazo.net\");",
							"pm.globals.set(\"feature-flags.aplazo\", \"https://feature-flags.aplazo.net\");",
							"pm.globals.set(\"cus-reg-aplazo\", \"https://customer-registration.aplazo.net\");",
							"pm.globals.set(\"vcard.aplazo\", \"https://vcard.aplazo.net\");",
							"pm.globals.set(\"ms-payments.apz\",\"https://ms-payments.aplazo.net\");",
							"pm.globals.set(\"paylink-aplazo\",\"https://paylink-ms.aplazo.net\");",
							"pm.globals.set(\"mobile-inquiry.apz\",\"https://mobile-inquiry.aplazo.net\")",
							"pm.globals.set(\"stp-aplazo\",\"https://stp-ms.aplazo.net\");",
							"/* CUSTOMER INFORMATION */",
							"pm.globals.set(\"phone\", \"527841390750\"); //529311931193",
							"/* MERCHANT INFORMATION */",
							"pm.globals.set(\"totalPrice\", \"200\");",
							"pm.globals.set(\"apiToken\",\"c2b7c861-7e19-4cbb-a646-15e7c17cafba\");",
							"pm.globals.set(\"merchant_id\", \"2135\");",
							"/* FEATURE FLAG */",
							"pm.globals.set(\"dynamic\", \"dynamic-installmentsFlag\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-session-id-kount",
						"value": "{{$randomUUID}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"login\": \"{{phone}}\",\n    \"password\": \"123456\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{cus-reg-aplazo}}/login",
					"host": [
						"{{cus-reg-aplazo}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_Loans OUTSTANDING",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"",
							"    var response = JSON.parse(responseBody);",
							"",
							"    for (let i = 0; i < response.length; i++) {",
							"        if (response[i].status == 'OUTSTANDING') {",
							"            pm.globals.set(\"loan\", response[i].loanId);",
							"            console.log(pm.globals.get(\"loan\"));",
							"            pm.globals.set(\"installments\", response[i].numberOfInstallments);",
							"            console.log(pm.globals.get(\"installments\"));",
							"            pm.globals.set(\"statusLoan\", response[i].status);",
							"            console.log(pm.globals.get(\"statusLoan\"));",
							"            break; ",
							"        } else if (response[i].status == 'HISTORICAL') {",
							"            console.log(\"Estatus de loan no es OUTSTANDING\");",
							"            pm.globals.set(\"loan\", response[i].loanId);",
							"            pm.globals.set(\"statusLoan\", response[i].status);",
							"        }",
							"    }",
							"",
							"    pm.test(\"Loan tiene status OUTSTANDING\", function() {",
							"        pm.expect(pm.globals.get(\"statusLoan\")).to.equal(\"OUTSTANDING\");",
							"    });",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Authorization-customer}}"
					}
				],
				"url": {
					"raw": "{{mobile-inquiry.apz}}/api/inquiry/v2/loan?pageNo=0&pageSize=20&status=OUTSTANDING",
					"host": [
						"{{mobile-inquiry.apz}}"
					],
					"path": [
						"api",
						"inquiry",
						"v2",
						"loan"
					],
					"query": [
						{
							"key": "pageNo",
							"value": "0"
						},
						{
							"key": "pageSize",
							"value": "20"
						},
						{
							"key": "status",
							"value": "OUTSTANDING"
						}
					]
				},
				"description": "Generated from cURL: curl --location 'https://customer-mono.aplazo.net/api/v1/customer/loan-history?page=0&size=10&status=OUTSTANDING&status=LATE&status=DEFAULTED&status=HISTORICAL' \\\n--header 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1MjIyODMwMjgxMjQiLCJleHBSZWZyZXNoIjoiMjAyNC0xMC0xOFQyMTo1MToyNy4zNzc5NTciLCJyb2xlIjoiUk9MRV9DVVNUT01FUiIsInJlZ1N0YXRlQ29kZSI6InNhdmVkX2xvZ2luIiwibmFtZSI6Ik1hdXJpY2lvIEVzbGF2YSBNYXRlbyIsImN1c3RvbWVySWQiOjE5MjA3LCJzZXNzaW9uSWQiOiJiZWIyNjJjYy01MjdhLTQ1MmQtYTQ0MS0xOTY0ZWVmNzgyOWQiLCJleHAiOjE3MjY3ODI2ODcsIjJmYSI6dHJ1ZSwiZmluaXNoUmVnIjpmYWxzZSwicmVmcmVzaFRva2VuIjoiYWRlNmI5YmItMTZhMi00ZWQ0LWFkZDUtNjExMDkwODk1OTc1In0.GCdqJY3cx-_1EwGKNg5Bgvlca914VzqZdP9N9UqDFe5dfcDHUk0b8Vlqdra5MOd-heZoIdos-Y_MZtWrLdEMDg'"
			},
			"response": []
		},
		{
			"name": "GET_Transaction status NEXT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"",
							"    var response = JSON.parse(responseBody);",
							"",
							"    if (pm.globals.get(\"statusLoan\") == 'OUTSTANDING' || pm.globals.get(\"statusLoan\") == 'LATE' ) {",
							"        for (let i = 0; i < response.transactions.length; i++) {",
							"            if (response.transactions[i].status == 'NEXT') {",
							"",
							"                pm.test(\"Validar que el status del installment sea NEXT\", function () {",
							"                    pm.expect(response.transactions[i].status).to.equal(\"NEXT\");",
							"                });",
							"",
							"                pm.globals.set(\"transactionId\", response.transactions[i].id);",
							"                pm.globals.set(\"statusInstallment\", response.transactions[i].status)",
							"                break; ",
							"            }",
							"        }",
							"    }",
							"",
							"    if (pm.globals.get(\"statusLoan\") == 'HISTORICAL' ) {",
							"        console.log(\"Es loan esta en status diferente a OUTSTANDING\")",
							"    }",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Authorization-customer}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{mobile-inquiry.apz}}/api/inquiry/v1/loan/{{loan}}",
					"host": [
						"{{mobile-inquiry.apz}}"
					],
					"path": [
						"api",
						"inquiry",
						"v1",
						"loan",
						"{{loan}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_Clabe pay next payment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"",
							"    var response = JSON.parse(responseBody);",
							"    pm.globals.set(\"clabeLoan\", response.clabe);",
							"    pm.globals.set(\"totalAmount\",response.totalAmount);",
							"    pm.globals.set(\"isWholePayment\",response.reference);",
							"    pm.globals.set(\"reference\",response.reference);",
							"    var loanId = pm.globals.get(\"loan\");",
							"    var referencia = pm.globals.get(\"reference\");",
							"",
							"    pm.test(\"Referencia generada para Transaction\", function () {",
							"        var responseBody = pm.response.json();",
							"        pm.expect(responseBody.isWholePayment).equals(false);",
							"    });",
							"",
							"    pm.test(\"TransactionIndex no es null\", function () {",
							"        var responseBody = pm.response.json();",
							"        pm.expect(responseBody.transactionIndex).to.not.be.null;",
							"    });",
							"",
							"    pm.test(\"Referencia es igual a loan\", function () {",
							"        var responseBody = pm.response.json();",
							"        pm.expect(Number(referencia)).to.equal(Number(loanId), \"Referencia debe ser igual al valor de loan\");",
							"    });",
							"",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Authorization-customer}}"
					},
					{
						"key": "Test-Mode",
						"value": "true",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{paylink-aplazo}}/api/v1/spei/clabe?loanId={{loan}}&transactionId={{transactionId}}",
					"host": [
						"{{paylink-aplazo}}"
					],
					"path": [
						"api",
						"v1",
						"spei",
						"clabe"
					],
					"query": [
						{
							"key": "loanId",
							"value": "{{loan}}"
						},
						{
							"key": "transactionId",
							"value": "{{transactionId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST_Make payment with SPEI",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic U1RQOndkZWZwbCQx"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": {{$randomInt}},\n    \"fechaOperacion\": 20240429,\n    \"institucionOrdenante\": 90646,\n    \"institucionBeneficiaria\": 90646,\n    \"claveRastreo\": \"Pago SPEI-L{{loan}}-T{{transactionId}}\", \n    \"monto\": {{totalAmount}}, \n    \"nombreOrdenante\": \"Ruben Gallegos Gonzalez\",\n    \"tipoCuentaOrdenante\": 40,\n    \"cuentaOrdenante\": \"646180263400034522\",\n    \"rfcCurpOrdenante\": \"GAGR911030AC8\",\n    \"nombreBeneficiario\": \"SISTEMA DE TRANSFERENCIAS Y PAGOS STP SA\",\n    \"tipoCuentaBeneficiario\": 40,\n    \"cuentaBeneficiario\": \"{{clabeLoan}}\", \n    \"nombreBeneficiario2\": \"APLAZO\",\n    \"tipoCuentaBeneficiario2\": \"40\",\n    \"cuentaBeneficiario2\": \"646180368300000001\",\n    \"rfcCurpBeneficiario\": \"STP081030FE6\",\n    \"conceptoPago\": \"L{{loan}}\", \n    \"referenciaNumerica\": {{reference}}, \n    \"empresa\": \"APLAZO\",\n    \"tipoPago\": \"5\", \n    \"tsLiquidacion\": \"1695164880917\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{stp-aplazo}}/api/v1/codi/sendabono/receiver?InstitucionOrdenante=STPOrdenante&NombreOrdenente=STPNomOrdenante&CuentaBeneficiario=6000326787999",
					"host": [
						"{{stp-aplazo}}"
					],
					"path": [
						"api",
						"v1",
						"codi",
						"sendabono",
						"receiver"
					],
					"query": [
						{
							"key": "InstitucionOrdenante",
							"value": "STPOrdenante"
						},
						{
							"key": "NombreOrdenente",
							"value": "STPNomOrdenante"
						},
						{
							"key": "CuentaBeneficiario",
							"value": "6000326787999"
						}
					]
				},
				"description": "Generated from cURL: curl --location 'https://stp-ms.aplazo.net/api/v1/codi/sendabono/receiver?InstitucionOrdenante=STPOrdenante&NombreOrdenente=STPNomOrdenante&CuentaBeneficiario=6000326787999' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic U1RQOndkZWZwbCQx' \\\n--data '{\n    \"id\": 14228475,\n    \"fechaOperacion\": 20240429,\n    \"institucionOrdenante\": 90646,\n    \"institucionBeneficiaria\": 90646,\n    \"claveRastreo\": \"Pago SPEI-L134141\", \n    \"monto\": 28.60, \n    \"nombreOrdenante\": \"Ruben Gallegos Gonzalez\",\n    \"tipoCuentaOrdenante\": 40,\n    \"cuentaOrdenante\": \"646180263400034522\",\n    \"rfcCurpOrdenante\": \"GAGR911030AC8\",\n    \"nombreBeneficiario\": \"SISTEMA DE TRANSFERENCIAS Y PAGOS STP SA\",\n    \"tipoCuentaBeneficiario\": 40,\n    \"cuentaBeneficiario\": \"646962368300029378\", \n    \"nombreBeneficiario2\": \"APLAZO\",\n    \"tipoCuentaBeneficiario2\": \"40\",\n    \"cuentaBeneficiario2\": \"646180368300000001\",\n    \"rfcCurpBeneficiario\": \"STP081030FE6\",\n    \"conceptoPago\": \"L88863:{{trxId}}\", \n    \"referenciaNumerica\": 140700, \n    \"empresa\": \"APLAZO\",\n    \"tipoPago\": \"5\", \n    \"tsLiquidacion\": \"1695164880917\"\n}'"
			},
			"response": []
		},
		{
			"name": "GET_Transaction status NEXT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"",
							"    const targetTransactionId = pm.globals.get(\"transactionId\");",
							"",
							"    const response = pm.response.json();",
							"",
							"    pm.test(\"La clave 'transactions' existe en la respuesta\", function () {",
							"        pm.expect(response).to.have.property('transactions');",
							"    });",
							"",
							"    pm.test(`El transactionId ${targetTransactionId} está en status 'PAID' y tiene 'lastDigits' como 'manual_payment'`, function () {",
							"        const transaction = response.transactions.find(item => item.id === targetTransactionId);",
							"        ",
							"        pm.expect(transaction, `El transactionId ${targetTransactionId} no existe`).to.exist;",
							"",
							"        if (transaction) {",
							"            pm.expect(transaction.status, `El status no es 'PAID'`).to.equal(\"PAID\");",
							"            pm.expect(transaction.lastDigits, `Los lastDigits no son 'manual_payment'`).to.equal(\"manual_payment\");",
							"        }",
							"    });",
							"",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Authorization-customer}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{mobile-inquiry.apz}}/api/inquiry/v1/loan/{{loan}}",
					"host": [
						"{{mobile-inquiry.apz}}"
					],
					"path": [
						"api",
						"inquiry",
						"v1",
						"loan",
						"{{loan}}"
					]
				}
			},
			"response": []
		}
	]
}